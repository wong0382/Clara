@use '../variables/colors' as colors;
@use '../variables/spacing' as spacing;
@use '../variables/border' as border;
@use '../variables/typography' as typography;
@use '../variables/sizing' as sizing;

// ================================
// Input Component Styles
// ================================

// Base input styles
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="tel"],
input[type="url"],
input[type="search"],
input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"],
input[type="week"],
textarea,
select {
  width: 100%;
  padding: spacing.$spacing-sm spacing.$spacing-md;
  font-family: typography.$font-family-base;
  font-size: sizing.$font-size-base;
  line-height: typography.$line-height-base;
  color: colors.$text-color;
  background-color: colors.$background-color;
  border: border.$border-width-thin solid colors.$border-color;
  border-radius: border.$border-radius-sm;
  transition: all 0.3s ease;
  outline: none;

  &:focus {
    border-color: colors.$primary-color;
    box-shadow: 0 0 0 3px rgba(199, 140, 6, 0.1);
  }

  &:hover:not(:disabled) {
    border-color: darken(colors.$border-color, 10%);
  }

  &:disabled {
    background-color: colors.$light-color;
    cursor: not-allowed;
    opacity: 0.6;
  }

  &::placeholder {
    color: lighten(colors.$text-color, 40%);
  }
}

// Textarea specific
textarea {
  min-height: 120px;
  resize: vertical;
}

// Select specific
select {
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%23252525' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right spacing.$spacing-sm center;
  padding-right: spacing.$spacing-xl;
}

// Checkbox and Radio
input[type="checkbox"],
input[type="radio"] {
  width: auto;
  margin-right: spacing.$spacing-xs;
  cursor: pointer;
  accent-color: colors.$primary-color;
}

// Label styles
label {
  display: block;
  margin-bottom: spacing.$spacing-xs;
  font-weight: typography.$font-weight-bold;
  font-size: sizing.$font-size-base;
  color: colors.$text-color;
}

// Form group
.form-group {
  margin-bottom: spacing.$spacing-lg;
}

// Input sizes
.input-sm {
  padding: spacing.$spacing-xs spacing.$spacing-sm;
  font-size: sizing.$font-size-sm;
}

.input-lg {
  padding: spacing.$spacing-md spacing.$spacing-lg;
  font-size: sizing.$font-size-lg;
}

// Input variants
.input-primary {
  border-color: colors.$primary-color;

  &:focus {
    border-color: darken(colors.$primary-color, 10%);
    box-shadow: 0 0 0 3px rgba(199, 140, 6, 0.15);
  }
}

.input-secondary {
  border-color: colors.$secondary-color;
  background-color: lighten(colors.$secondary-color, 5%);

  &:focus {
    border-color: darken(colors.$secondary-color, 10%);
    box-shadow: 0 0 0 3px rgba(255, 230, 172, 0.3);
  }
}

.input-dark {
  background-color: colors.$dark-color;
  color: colors.$background-color;
  border-color: colors.$dark-color;

  &::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }

  &:focus {
    border-color: lighten(colors.$dark-color, 20%);
    box-shadow: 0 0 0 3px rgba(37, 37, 37, 0.2);
  }
}

// Input states
.input-success {
  border-color: #28a745;

  &:focus {
    box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
  }
}

.input-error {
  border-color: #dc3545;

  &:focus {
    box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
  }
}

.input-warning {
  border-color: #ffc107;

  &:focus {
    box-shadow: 0 0 0 3px rgba(255, 193, 7, 0.1);
  }
}

// Input with icon
.input-group {
  position: relative;
  display: flex;
  align-items: center;

  input {
    flex: 1;
  }

  .input-icon {
    position: absolute;
    left: spacing.$spacing-sm;
    color: lighten(colors.$text-color, 30%);
    pointer-events: none;
  }

  &.has-icon-left input {
    padding-left: spacing.$spacing-xl;
  }

  &.has-icon-right .input-icon {
    left: auto;
    right: spacing.$spacing-sm;
  }

  &.has-icon-right input {
    padding-right: spacing.$spacing-xl;
  }
}

// Rounded inputs
.input-rounded {
  border-radius: border.$border-radius-full;
}

// Borderless input
.input-borderless {
  border: none;
  border-bottom: border.$border-width-thin solid colors.$border-color;
  border-radius: 0;
  padding-left: 0;
  padding-right: 0;

  &:focus {
    border-bottom-color: colors.$primary-color;
    box-shadow: none;
  }
}

// Input helper text
.input-help {
  display: block;
  margin-top: spacing.$spacing-xs;
  font-size: sizing.$font-size-sm;
  color: lighten(colors.$text-color, 30%);
}

.input-error-text {
  display: block;
  margin-top: spacing.$spacing-xs;
  font-size: sizing.$font-size-sm;
  color: #dc3545;
}

.input-success-text {
  display: block;
  margin-top: spacing.$spacing-xs;
  font-size: sizing.$font-size-sm;
  color: #28a745;
}

// File input
input[type="file"] {
  padding: spacing.$spacing-sm;
  cursor: pointer;

  &::file-selector-button {
    padding: spacing.$spacing-xs spacing.$spacing-md;
    margin-right: spacing.$spacing-sm;
    background-color: colors.$primary-color;
    color: colors.$background-color;
    border: none;
    border-radius: border.$border-radius-sm;
    cursor: pointer;
    font-family: typography.$font-family-base;
    font-weight: typography.$font-weight-bold;
    transition: background-color 0.3s ease;

    &:hover {
      background-color: darken(colors.$primary-color, 10%);
    }
  }
}

// Range input
input[type="range"] {
  width: 100%;
  height: 6px;
  background: colors.$light-color;
  border-radius: border.$border-radius-full;
  outline: none;
  padding: 0;
  border: none;

  &::-webkit-slider-thumb {
    appearance: none;
    width: 20px;
    height: 20px;
    background: colors.$primary-color;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease;

    &:hover {
      background: darken(colors.$primary-color, 10%);
    }
  }

  &::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: colors.$primary-color;
    border-radius: 50%;
    cursor: pointer;
    border: none;
    transition: background-color 0.3s ease;

    &:hover {
      background: darken(colors.$primary-color, 10%);
    }
  }
}
